RELBON;01;2;Solicitar Relatorio;3;_aRegs := {};;
_aRet := {};;

cMailUser := AllTrim(Lower(UsrRetMail(RetCodUsr())));;

cMailUser := If(empty(cMailUser),Space(100),cMailUser);;

AADD(_aRegs,{1,"Data Bonificação de"  ,CTOD(SPACE(8)),PesqPict("SF2","F2_EMISSAO"),".T.","",".T.",60,.F.});;
AADD(_aRegs,{1,"Data Bonificação Até" ,CTOD(SPACE(8)),PesqPict("SF2","F2_EMISSAO"),".T.","",".T.",60,.F.});;
AADD(_aRegs,{1,"e-mail"	                  ,cMailUser,,"';' $ mv_par03 .or. isemail(mv_par03)","",".T.",100,.T.});;

__EXIT := ! ParamBox(_aRegs,"Parametros do Relatório",_aRet);;

_vazio1 := !(!empty(mv_par01) .And. !empty(mv_par02));;
_vazio2 := !empty(mv_par03);;

_vazio1_t := (_vazio1 .AND. _vazio2) .OR. (!_vazio1 .AND. !_vazio2)

__EXIT := Eval({|| If(_vazio1_t, (Alert("Preencha as Datas de Bonificação !"),.T.),.F.)});;

requestde  := if(!empty(mv_par01),FWTimeStamp(3,mv_par01,"00:00:00"),"");;
requestate    := if(!empty(mv_par02),FWTimeStamp(3,mv_par02,"00:00:00"),"");;

cPostJson := '{"reportType":"DISCOUNT_USED_REPORT",';;
cPostJson += ' "sendTo": "'+Alltrim(mv_par03)+'",';;
cPostJson += ' "filters":  {';;
cPostJson += ' "startAt":"' + requestde + '", "endAt":"' + requestate + '", "registryCode":"" ';;
cPostJson += '}';;
cPostJson += '}';;

aTokenWsO2 := { .F., "", "" };;

MsAguarde({|| aTokenWsO2 := U_TkAwsMnt() },"Aguarde...","Solicitando o token");;

If(! aTokenWsO2[1][1], RECLOCK("P01", .T.), Nil);;
If(! aTokenWsO2[1][1], P01->P01_ROTINA := "RELBON", Nil);;
If(! aTokenWsO2[1][1], P01->P01_DTSOLI := Date(), Nil);;
If(! aTokenWsO2[1][1], P01->P01_USER := __cUserId, Nil);;
If(! aTokenWsO2[1][1], P01->P01_EMAIL := Alltrim(mv_par03), Nil);;
If(! aTokenWsO2[1][1], P01->P01_HRSOLI := StrTran(Time(), ":", ""), Nil);;
If(! aTokenWsO2[1][1], P01->P01_REQST := cPostJson, Nil);;
If(! aTokenWsO2[1][1], P01->P01_RESPON := "Erro Solicitação Token" + aTokenWsO2[1][3] + ' ' + aTokenWsO2[1][2], Nil);;
If(! aTokenWsO2[1][1], P01->(MsUnLock()), Nil);;

If(! aTokenWsO2[1][1], MsgInfo("Erro ao solicitar token para o relatorio de BONOFICACAO!"), Nil)

__EXIT := ! aTokenWsO2[1][1];;

aHeadAPI := {}
AADD(aHeadAPI,'Authorization: ' + aTokenWsO2[1][3] + ' ' + aTokenWsO2[1][2])
cRetWsPad := "";;
cRetWsErro := "";;

MsAguarde({|| U_FCsmWSCg( cPostJson , Alltrim(SuperGetmv('TM_AWSURLM',.F.,"https://databus-api.totvs.com.br/v1")), "/reports", "3", Nil , Nil , @cRetWsPad , @cRetWsErro , aHeadAPI ) },"Aguarde...","Solicitando o relatório");;
oJSon := nil;;
If(! Empty(cRetWsPad), FWJsonDeserialize(cRetWsPad,@oJSon), Nil);;
lOk := ( oJson <> Nil .And. Type("oJSon:status") <> "U" .And. oJSon:status == 'success' );;

RECLOCK("P01", .T.);;
P01->P01_ROTINA := "RELBON";;
P01->P01_DTSOLI := Date();;
P01->P01_USER := __cUserId;;
P01->P01_EMAIL := Alltrim(mv_par03);;
P01->P01_HRSOLI := StrTran(Time(), ":", "");;
P01->P01_PARAM := "";;
P01->P01_REQST := cPostJson;;
P01->P01_RESPON := cRetWsPad + If(!Empty(cRetWsPad) .And. Empty(cRetWsErro), Chr(13) + Chr(10), "") + cRetWsErro;;
P01->(MsUnLock());;

If(lOk, MsgInfo("Relatório de BONIFICACAO solicitado com sucesso ! "+Chr(13)+Chr(10)+" O e-mail sera encaminhado com o link para Download."), Alert("Erro ao solicitar relatório de BONIFICACAO!"));;;;3;
RELBON;02;2;Visualizar;2;cCadastro:= oCQuery:cCadastro;;
AxVisual("P01", P01->(Recno()),2);;;
